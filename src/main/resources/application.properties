spring.application.name=ForYou-server

# 서버 설정 (Vite 개발 서버는 5173 포트 사용)
server.port=8080
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# CORS
spring.web.cors.allowed-origins=http://localhost:5173,http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

spring.web.resources.static-locations=classpath:/static/,classpath:/public/,classpath:/dist/
spring.web.resources.cache.cachecontrol.max-age=3600

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false

# HikariCP
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.isolation-level=TRANSACTION_READ_COMMITTED

# SSL 설정 (AWS RDS 사용 시) - 필수
spring.datasource.hikari.data-source-properties.ssl=true
spring.datasource.hikari.data-source-properties.sslmode=require

# Jackson JSON 설정
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Seoul
spring.jackson.default-property-inclusion=NON_NULL

# Validation 설정
spring.validation.enabled=true

# Actuator 설정 (모니터링)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.info.env.enabled=true

# 로그 설정
logging.level.com.foryou.foryouserver=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# 파일 업로드 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 에러 응답 설정
server.error.include-message=always
server.error.include-binding-errors=always

# AWS RDS PostgreSQL
spring.datasource.url=jdbc:postgresql://postgres.c1qyy48eknoy.ap-northeast-2.rds.amazonaws.com:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=mslk0804!#$
spring.datasource.driver-class-name=org.postgresql.Driver

# JWT Configuration
jwt.secret=your-secret-key-min-256-bits-your-secret-key-min-256-bits-your-secret-key-min-256-bits
jwt.expiration=86400000

# OAuth2 Configuration
# Google OAuth2 (Google Cloud Console에서 발급받은 정보로 교체 필요)
spring.security.oauth2.client.registration.google.client-id=1074277024633-85ar1c93um302et2fcm7mp8kg1p1brgm.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Kakao OAuth2 (Kakao Developers에서 발급받은 정보로 교체 필요)
spring.security.oauth2.client.registration.kakao.client-id=YOUR_KAKAO_REST_API_KEY
spring.security.oauth2.client.registration.kakao.client-secret=YOUR_KAKAO_CLIENT_SECRET
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Kakao OAuth2 Provider Configuration
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# OAuth2 Success Redirect URI (프론트엔드 URL)
# OAuth2 로그인 성공 후 프론트엔드 리다이렉트 페이지로 이동
oauth2.redirect-uri=http://localhost:5173/oauth2/redirect